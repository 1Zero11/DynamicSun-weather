@using DynamicSun_weather.Data;
@using PagedList.Mvc;
@using PagedList;
@model PaginatedList<DynamicSun_weather.Models.EntryModel>

@{
    ViewData["Title"] = "Просмотр архивов погодных условий в городе Москве";
}

<h1>Просмотр архивов погодных условий в городе Москве</h1>

<form asp-action="ViewTable2" method="get">
    <div class="form-actions no-color">
        <p>
            Год: <input type="text" name="selectedYear" value="@ViewData["CurrentYear"]" />
            @Html.DropDownList("selectedMonth",
                new SelectList(Enum.GetValues(typeof(Month))),
                "Месяц",
                ViewData["CurrentMonth"])
            <input type="submit" value="Фильтровать" class="btn btn-default" /> |
            <a asp-action="ViewTable2">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Дата
            </th>
            <th>
                Температура
            </th>
            <th>
                Влажность
            </th>
            <th>
                Роса
            </th>
            <th>
                Давление
            </th>
            <th>
                Направление ветра
            </th>
            <th>
                Скорость ветра
            </th>
            <th>
                Облачность
            </th>
            <th>
                Нижняя граница облачности
            </th>
            <th>
                Видимость
            </th>
            <th>
                Условия
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Temp)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Humidity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dew)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pressure)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WindDirection)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WindSpeed)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cloudiness)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CloudinessLowerBound)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Visibility)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Conditions)
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="ViewTable2"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentMonth="@ViewData["CurrentMonth"]"
   asp-route-currentYear="@ViewData["CurrentYear"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="ViewTable2"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentMonth="@ViewData["CurrentMonth"]"
   asp-route-currentYear="@ViewData["CurrentYear"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

